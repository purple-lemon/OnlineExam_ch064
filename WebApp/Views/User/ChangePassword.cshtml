@model WebApp.ViewModels.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
}
@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@inject IHtmlLocalizer<SharedRes> SharedLocalizer

<h2>@SharedLocalizer["ChangeFor"]: @Model.Email</h2>
<input type="hidden" asp-for="Id" />
<form id="app" asp-action="ChangePassword" asp-controller="User">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <p v-if="errors.length">
        <b>@SharedLocalizer["FixError"]:</b>
        <ul>
            <li v-for="error in errors">{{ error }}</li>
        </ul>
    </p>
    <div class="form-group">
        <label for="OldPassword">@SharedLocalizer["OldPassword"]</label>

        <input asp-for="OldPassword" type="password" class="form-control"
               name="OldPassword" id="OldPassword"
               v-model="OldPassword" placeholder="OldPassword ">
        <span asp-validation-for="OldPassword"></span>
    </div>
    <div class="form-group">
        <label for="NewPassword">@SharedLocalizer["NewPassword"]</label>

        <input asp-for="NewPassword" class="form-control"
               id="NewPassword" name="NewPassword"
               v-model="NewPassword" placeholder="NewPassword">
        <span asp-validation-for="NewPassword"></span>
    </div>

    <div class="form-group">
        <label for="NewPassword">@SharedLocalizer["ConfirmNewPassword"]</label>

        <input asp-for="ConfirmNewPassword" class="form-control"
               id="ConfirmNewPassword" name="ConfirmNewPassword"
               v-model="ConfirmNewPassword" placeholder="NewPassword">
        <span asp-validation-for="ConfirmNewPassword"></span>
    </div>
    <input v-on:click="save" type="submit" value="@SharedLocalizer["Save"]">
</form>
@section Scripts{
<script>
        var app = new Vue({
            el: '#app',
            data: {
                errors: [],
                OldPassword: "",
                NewPassword: "",
                ConfirmNewPassword: ""
            },
            methods:
            {
                save: function(e) {
                    this.errors = [];
                    if (!this.OldPassword) this.errors.push("@SharedLocalizer["FillOldPassword"]");
                    if (!this.NewPassword) this.errors.push("@SharedLocalizer["FillNewPassword"]");
                    else if (!this.validLength(this.NewPassword)) {  
                        this.errors.push("@SharedLocalizer["8Char"]");
                    }
                    else if (!this.validLower(this.NewPassword)) {
                        this.errors.push("@SharedLocalizer["LowerCase"]");
                    }
                    else if (!this.validUpper(this.NewPassword)) {
                        this.errors.push("@SharedLocalizer["UpperCase"]");
                    }
                    else if (!this.validNumeric(this.NewPassword)) {
                        this.errors.push("@SharedLocalizer["Number"]");
                    }
                    else if (!this.validNAF(this.NewPassword)) {
                        this.errors.push("@SharedLocalizer["NonAN"]");
                    }

                    if (!this.ConfirmNewPassword) this.errors.push("@SharedLocalizer["FillConfNewPassword"]");
                    if (this.NewPassword !== this.ConfirmNewPassword && this.NewPassword && this.ConfirmNewPassword !== "")
                        this.errors.push("@SharedLocalizer["DoesNotmatch"]");
                    if (!this.errors.length) return true;
                    e.preventDefault();
                },
                    validLength: function (e) {
                    var re = /^.{8,}$/;
                    return re.test(e);
                    },
                    validLower: function (e) {
                        var re = /^(?=.*[a-z])/;
                        return re.test(e);
                    },
                    validUpper: function (e) {
                        var re = /^(?=.*[A-Z])/;
                        return re.test(e);
                    },
                    validNumeric: function (e) {
                        var re = /^(?=.*\d)/;
                        return re.test(e);
                    },
                validNAF: function (e) {
                        var re = /^(?=.*[#-$_^+=!*()@@%&])/;
                        return re.test(e);
                    }

            }
        });
</script>
}
