@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    // получаем сервис IRequestCultureFeature
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    // получаем список поддерживаемых культур
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
    
}
<style>
    select {
        background-color: #ffffff;
    }
    .deff {
        font-size: 13px;
        font-family: 'Lato', Arial, sans-serif;
        line-height: 30px;
        color: black;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-weight: bold;
        display: block;
        height: 100%;
        color: #ffffff;
        text-decoration: none;
    }
    .deff-language {
        padding-top: 15px;
        margin-left: 15px;
    }
    .dropdown-lang {
        font-size: 15px;
        color: black;
        margin-right: 15px
    }
    
</style>

<form  asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@Context.Request.Path"
       method="post" class="form-horizontal deff deff-language">
    @Localizer["Language:"]
    <select class="dropdown-lang" name="culture" onchange="this.form.submit();"
            asp-for="@requestCulture.RequestCulture.UICulture.Name"
            asp-items="cultureItems">
        
    </select>
</form>
